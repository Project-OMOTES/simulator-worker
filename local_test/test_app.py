import sys
import threading
from typing import Any
from uuid import UUID, uuid4

import jsonpickle  # type: ignore
from celery import Celery  # type: ignore

input_esdl_no_influx = ""  # noqa

print("Application started")

app = Celery(
    "omotes",
    broker="amqp://user:bitnami@rabbitmq",
    backend="rpc://user:bitnami@rabbitmq",
    worker_prefetch_multiplier=1,
    task_acks_late=True,
    task_reject_on_worker_lost=True,
    # task_serializer="pickle",
    # result_serializer="pickle",
    # accept_content=["application/json", "application/x-python-serialize"],
)
print("Celery started")


def task_monitor() -> None:
    def on_event(event: dict[str, str]) -> None:
        print("EVENT HAPPENED: ", event["type"])

    def on_progress_update(event: Any) -> None:
        print(
            "################################  TASK PROGRESS UPDATED: ",
            event["progress"]["fraction"] * 100,
        )

    while True:
        try:
            with app.connection() as conn:
                recv = app.events.Receiver(
                    conn,
                    handlers={
                        "task-failed": on_event,
                        "task-succeeded": on_event,
                        "task-sent": on_event,
                        "task-received": on_event,
                        "task-revoked": on_event,
                        "task-started": on_event,
                        "task-progress-update": on_progress_update,
                        # OR: '*' : on_event
                    },
                )
                recv.capture(limit=None, timeout=None)
        except (KeyboardInterrupt, SystemExit):
            print("EXCEPTION KEYBOARD INTERRUPT")
            sys.exit()


def print_result(result: dict[str, str], task_name: str) -> None:
    if "error_message" in result:
        print(
            f"Error message: {result['error_message']}, exit code: {result['exit_code']} "
            "from task: {task_name}"
        )
        print(f"logs: {result['logs']} from task: {task_name}")
    else:
        print(f"Received logs: '{result['logs']}' from task: {task_name}")
        print(f"Output ESDL: '{result['output_esdl']}' from task: {task_name}")


t = threading.Thread(target=task_monitor)
t.daemon = True
t.start()

q_name = "grow"
simulator_job_id: UUID = uuid4()

optimizer_task = app.signature(
    "simulator", (simulator_job_id, input_esdl_no_influx), queue=q_name
).delay()
print("waiting for tasks...")
print_result(jsonpickle.decode(optimizer_task.get()), "optimizer-task")
