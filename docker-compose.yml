version: "3.8"

networks:
  omotes:


volumes:
  db-data:
  broker-data:
  influxdb_storage:


services:
  rabbitmq:
    image: rabbitmq:3.12-management
    restart: unless-stopped
    volumes:
      - "broker-data:/var/lib/rabbitmq/"
      - "./local_test/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_ROOT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_ROOT_PASSWORD}
    hostname: rabbitmq-nwn
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - nwn
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 10

  omotes_influxdb:
    image: influxdb:1.7
    ports:
      - "${INFLUXDB_PORT}:${INFLUXDB_PORT}"
      - "${INFLUXDB_RPC_PORT}:${INFLUXDB_RPC_PORT}"
    networks:
      - omotes
    environment:
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_HTTP_BIND_ADDRESS=:${INFLUXDB_PORT}
      - INFLUXDB_BIND_ADDRESS=:${INFLUXDB_RPC_PORT}
      - INFLUXDB_DB=omotes_timeseries
      - INFLUXDB_WRITE_USER=${INFLUXDB_WRITE_USER}
      - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://omotes_influxdb:${INFLUXDB_PORT}/ping"
        ]
      interval: 10s
      timeout: 5s
    volumes:
      - influxdb_storage:/var/lib/influxdb

    orchestrator:
      image: ghcr.io/project-omotes/omotes_orchestrator:0.0.6
      restart: unless-stopped
      networks:
        - nwn
      environment:
        CELERY_RABBITMQ_USERNAME: ${RABBITMQ_CELERY_USER_NAME}
        CELERY_RABBITMQ_PASSWORD: ${RABBITMQ_CELERY_USER_PASSWORD}
        CELERY_RABBITMQ_HOSTNAME: rabbitmq-nwn
        CELERY_RABBITMQ_PORT: 5672
        CELERY_RABBITMQ_VIRTUALHOST: omotes_celery

        SDK_RABBITMQ_USERNAME: ${RABBITMQ_OMOTES_USER_NAME}
        SDK_RABBITMQ_PASSWORD: ${RABBITMQ_OMOTES_USER_PASSWORD}
        SDK_RABBITMQ_HOSTNAME: rabbitmq-nwn
        SDK_RABBITMQ_PORT: 5672
        SDK_RABBITMQ_VIRTUALHOST: omotes

        TASK_RABBITMQ_USERNAME: ${RABBITMQ_CELERY_USER_NAME}
        TASK_RABBITMQ_PASSWORD: ${RABBITMQ_CELERY_USER_PASSWORD}
        TASK_RABBITMQ_HOSTNAME: rabbitmq-nwn
        TASK_RABBITMQ_PORT: 5672
        TASK_RABBITMQ_VIRTUALHOST: omotes_celery
      depends_on:
        rabbitmq:
          condition: service_healthy
  # simulator_worker:
  #   build:
  #     context: .
  #   env_file: .env
  #   networks:
  #     - omotes
  #   deploy:
  #     replicas: 1
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     omotes_influxdb:
  #       condition: service_healthy

  local_test:
    build:
      context: ./local_test
      dockerfile: Dockerfile
    networks:
      - omotes
    depends_on:
      simulator_worker:
        condition: service_started
